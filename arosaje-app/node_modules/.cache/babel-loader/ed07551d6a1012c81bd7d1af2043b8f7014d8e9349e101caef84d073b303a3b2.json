{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3761f64c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Drop image here\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Or\", -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_1, _hoisted_2];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"file-upload\",\n  class: \"file-upload-button\"\n}, \" Upload \", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"drop-area-image\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_image_preview = _resolveComponent(\"image-preview\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"drop-area\", [{\n      highlight: _ctx.draggedOver\n    }]]),\n    ref: \"dropArea\"\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass([\"fa fa-camera\", [{\n      hide: _ctx.numPreviewImages\n    }]])\n  }, null, 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"drop-area-text\", [{\n      hide: _ctx.numPreviewImages\n    }]])\n  }, _hoisted_3, 2 /* CLASS */), _hoisted_4, _createElementVNode(\"input\", {\n    id: \"file-upload\",\n    type: \"file\",\n    multiple: \"\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.uploadFiles && _ctx.uploadFiles(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.previewImageList, (image, index) => {\n    return _openBlock(), _createBlock(_component_image_preview, {\n      imageId: image.imageId,\n      imageSrc: image.imageSrc,\n      removeImage: _ctx.removeImage,\n      key: index,\n      onRemove: $event => _ctx.removePreviewImage(image.imageId)\n    }, null, 8 /* PROPS */, [\"imageId\", \"imageSrc\", \"removeImage\", \"onRemove\"]);\n  }), 128 /* KEYED_FRAGMENT */))])], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;gEAKMA,oBAAsB,WAAnB,iBAAe;gEAClBA,oBAAS,WAAN,IAAE;oBADLC,UAAsB,EACtBC,UAAS;gEAEXF,oBAAoE;EAA7DG,GAAG,EAAC,aAAa;EAACC,KAAK,EAAC;GAAqB,UAAQ;;EAEvDA,KAAK,EAAC;AAAiB;;;uBAT9BC,oBAoBM;IApBDD,KAAK,mBAAC,WAAW;MAAAE,WAAuBC;IAAW;IAAKC,GAAG,EAAC;MAE/DR,oBAAkE;IAA/DI,KAAK,mBAAC,cAAc;MAAAK,MAAkBF;IAAgB;2BACzDP,oBAGM;IAHDI,KAAK,mBAAC,gBAAgB;MAAAK,MAAkBF;IAAgB;iCAI7DG,UAAoE,EACpEV,oBAAqE;IAA9DW,EAAE,EAAC,aAAa;IAACC,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR,EAAQ;IAAEC,QAAM,yCAAEP,6CAAW;qCACjEP,oBAUM,OAVNe,UAUM,sBATJV,oBAQgBW,6BAPaT,qBAAgB,GAAjCU,KAAK,EAAEC,KAAK;yBADxBC,aAQgBC;MANXC,OAAO,EAAEJ,KAAK,CAACI,OAAO;MACtBC,QAAQ,EAAEL,KAAK,CAACK,QAAQ;MACxBC,WAAW,EAAEhB,gBAAW;MACxBiB,GAAG,EAAEN,KAAK;MACVO,QAAM,YAAElB,uBAAkB,CAACU,KAAK,CAACI,OAAO","names":["_createElementVNode","_hoisted_1","_hoisted_2","for","class","_createElementBlock","highlight","_ctx","ref","hide","_hoisted_4","id","type","multiple","onChange","_hoisted_5","_Fragment","image","index","_createBlock","_component_image_preview","imageId","imageSrc","removeImage","key","onRemove"],"sourceRoot":"","sources":["C:\\Users\\toumy\\OneDrive\\Bureau\\projet_mspr\\projet_vue\\a-rosa-je_mspr_epsi\\arosaje-app\\src\\components\\UploadImage.vue"],"sourcesContent":["<template>\r\n  <div class=\"drop-area\" :class=\"[{ highlight: draggedOver }]\" ref=\"dropArea\">\r\n\r\n    <i class=\"fa fa-camera\" :class=\"[{ hide: numPreviewImages }]\"></i>\r\n    <div class=\"drop-area-text\" :class=\"[{ hide: numPreviewImages }]\">\r\n      <p>Drop image here</p>\r\n      <p>Or</p>\r\n    </div>\r\n    <label for=\"file-upload\" class=\"file-upload-button\"> Upload </label>\r\n    <input id=\"file-upload\" type=\"file\" multiple @change=\"uploadFiles\" />\r\n    <div class=\"drop-area-image\">\r\n      <image-preview\r\n          v-for=\"(image, index) in previewImageList\"\r\n          :imageId=\"image.imageId\"\r\n          :imageSrc=\"image.imageSrc\"\r\n          :removeImage=\"removeImage\"\r\n          :key=\"index\"\r\n          @remove=\"removePreviewImage(image.imageId)\"\r\n      >\r\n      </image-preview>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\n\r\nimport ImagePreview from \"./ImagePreview.vue\";\r\n\r\nconst MAX_NUM_IMAGES = 9;\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    processImage: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n    removeImage: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n  },\r\n  components: {\r\n    ImagePreview,\r\n  },\r\n  data() {\r\n    return {\r\n      draggedOver: false,\r\n      numPreviewImages: 0,\r\n      numProcessingImage: 0,\r\n      previewImageList: [],\r\n      imageUrlMap: {},\r\n    };\r\n  },\r\n  methods: {\r\n    customPreventDefault(event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    },\r\n    previewImage(image, imageId) {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(image);\r\n      fileReader.onloadend = () => {\r\n        this.previewImageList.push({\r\n          imageSrc: fileReader.result,\r\n          imageId: imageId,\r\n        });\r\n        this.numPreviewImages += 1;\r\n        this.numProcessingImage -= 1;\r\n        if (this.numProcessingImage === 0) {\r\n          // Finish processing and displaying all images\r\n          this.emitUrlList();\r\n        }\r\n      };\r\n    },\r\n    async handleImage(image) {\r\n      const { imageId, imageUrl } = await this.processImage(image).catch(\r\n          (err) => {\r\n            console.log(\"Error processing image: \", err);\r\n            return {\r\n              imageId: undefined,\r\n              imageUrl: undefined,\r\n            };\r\n          }\r\n      );\r\n      if (!imageId || !imageUrl) {\r\n        return;\r\n      }\r\n      this.imageUrlMap[imageId] = imageUrl;\r\n      this.previewImage(image, imageId);\r\n    },\r\n    processImagesFromFiles(files) {\r\n      const uploadedImages = [...files].filter((file) => {\r\n        return file.type.startsWith(\"image\");\r\n      });\r\n      this.numProcessingImage = Math.min(\r\n          uploadedImages.length,\r\n          MAX_NUM_IMAGES - this.numPreviewImages\r\n      );\r\n      const processedImages = uploadedImages.slice(0, this.numProcessingImage);\r\n      processedImages.forEach(this.handleImage);\r\n    },\r\n    uploadFiles(event) {\r\n      if (this.numPreviewImages >= MAX_NUM_IMAGES) {\r\n        return;\r\n      }\r\n      const uploadedFiles = event.target.files;\r\n      if (!uploadedFiles) {\r\n        return;\r\n      }\r\n      this.processImagesFromFiles(uploadedFiles);\r\n    },\r\n    dropFiles(event) {\r\n      if (this.numPreviewImages >= MAX_NUM_IMAGES) {\r\n        return;\r\n      }\r\n      if (!event.dataTransfer) {\r\n        return;\r\n      }\r\n      if (!event.dataTransfer.files.length) {\r\n        return;\r\n      }\r\n      this.draggedOver = false;\r\n      this.processImagesFromFiles(event.dataTransfer.files);\r\n    },\r\n    removePreviewImage(imageId) {\r\n      delete this.imageUrlMap[imageId];\r\n      this.emitUrlList();\r\n      this.numPreviewImages -= 1;\r\n    },\r\n    emitUrlList() {\r\n      const updatedUrlList = Object.keys(this.imageUrlMap).map(\r\n          (key) => this.imageUrlMap[key]\r\n      );\r\n      this.$emit(\"update-urls\", updatedUrlList);\r\n    },\r\n  },\r\n  created() {\r\n    [\"dragover\", \"drop\"].forEach((eventName) => {\r\n      document.addEventListener(eventName, this.customPreventDefault);\r\n    });\r\n  },\r\n  mounted() {\r\n    // Prevent browser from opening dragged images in a new tab\r\n    // and the drop event can be handled by our callback\r\n    [\"dragover\", \"drop\"].forEach((eventName) => {\r\n      this.$refs.dropArea.addEventListener(\r\n          eventName,\r\n          this.customPreventDefault\r\n      );\r\n    });\r\n\r\n    this.$refs.dropArea.addEventListener(\"drop\", this.dropFiles);\r\n    // Show / hide highlight animation on drop area when files are dragged in / out\r\n    this.$refs.dropArea.addEventListener(\"dragenter\", () => {\r\n      this.draggedOver = true;\r\n    });\r\n    this.$refs.dropArea.addEventListener(\"dragleave\", (event) => {\r\n      const dropAreaPosition = this.$refs.dropArea.getBoundingClientRect();\r\n      // Only disable highlight animation when dragleave events occurs outside of drop area.\r\n      // By default, dragleave event occurs when dragging into child elements (still inside drop area).\r\n      const surplusGap = 10; //px\r\n      if (\r\n          event.clientX >= dropAreaPosition.left + surplusGap &&\r\n          event.clientX <= dropAreaPosition.right - surplusGap &&\r\n          event.clientY >= dropAreaPosition.top + surplusGap &&\r\n          event.clientY <= dropAreaPosition.bottom - surplusGap\r\n      ) {\r\n        return;\r\n      }\r\n      this.draggedOver = false;\r\n    });\r\n  },\r\n  beforeUnmount() {\r\n    [\"dragover\", \"drop\"].forEach((eventName) => {\r\n      document.removeEventListener(eventName, this.customPreventDefault);\r\n    });\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.drop-area {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5px;\r\n  height: 240px;\r\n  background: #f7f7f7;\r\n  border-radius: 4px;\r\n  border: 1px dashed grey;\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n.drop-area :where(.fa-camera, .drop-area-text) {\r\n  pointer-events: none;\r\n}\r\n.drop-area-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 12px;\r\n  width: 100%;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  justify-items: center;\r\n  align-items: center;\r\n}\r\n.drop-area > .fa-camera {\r\n  font-size: 30px;\r\n  color: #c2c2c2;\r\n}\r\n.drop-area-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 3px;\r\n  position: relative;\r\n  top: 7px;\r\n  font-size: 15px;\r\n  color: grey;\r\n}\r\n.drop-area-text > p {\r\n  margin: 0;\r\n}\r\n.drop-area-text > p:nth-child(2) {\r\n  font-size: 14px;\r\n}\r\n.drop-area-text > label {\r\n  font-size: 16px;\r\n}\r\n.file-upload-button {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  display: block;\r\n  width: 100px;\r\n  background: white;\r\n  cursor: pointer;\r\n  border: 1px solid #bdbdbd;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  padding: 3px;\r\n  color: grey;\r\n}\r\ninput[type=\"file\"] {\r\n  display: none;\r\n}\r\n.hide {\r\n  display: none;\r\n}\r\n.highlight {\r\n  box-shadow: 0 0 7px 5px lightblue;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}