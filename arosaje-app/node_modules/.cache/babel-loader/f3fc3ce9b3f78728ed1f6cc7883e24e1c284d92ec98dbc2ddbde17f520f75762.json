{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"titre\"\n}, \"Demande de gardinnage\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Drop image here\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Or\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"file-upload\",\n  class: \"file-upload-button\"\n}, \" Upload \", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"drop-area-image\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_checkbox = _resolveComponent(\"v-checkbox\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_image_preview = _resolveComponent(\"image-preview\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_sheet = _resolveComponent(\"v-sheet\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _openBlock(), _createBlock(_component_v_col, {\n    cols: \"10\",\n    sm: \"10\",\n    md: \"7\",\n    class: \"demande\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, {\n      class: \"mx-auto\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_sheet, {\n        class: \"cardform\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          onSubmit: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n            default: _withCtx(() => [_createVNode(_component_v_container, {\n              class: \"check\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_checkbox, {\n                label: \"Botaniste\"\n              }), _createVNode(_component_v_checkbox, {\n                label: \"Utilisateur\"\n              })]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_container, {\n            class: \"form\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_col, {\n              cols: \"12\",\n              md: \"4\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                modelValue: _ctx.firstname,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.firstname = $event),\n                rules: _ctx.nameRules,\n                counter: 10,\n                label: \"Localisation\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createElementVNode(\"div\", {\n                class: _normalizeClass([\"drop-area\", [{\n                  highlight: $data.draggedOver\n                }]]),\n                ref: \"dropArea\"\n              }, [_createElementVNode(\"i\", {\n                class: _normalizeClass([\"fa fa-camera\", [{\n                  hide: $data.numPreviewImages\n                }]])\n              }, null, 2 /* CLASS */), _createElementVNode(\"div\", {\n                class: _normalizeClass([\"drop-area-text\", [{\n                  hide: $data.numPreviewImages\n                }]])\n              }, _hoisted_4, 2 /* CLASS */), _hoisted_5, _createElementVNode(\"input\", {\n                id: \"file-upload\",\n                type: \"file\",\n                multiple: \"\",\n                onChange: _cache[1] || (_cache[1] = (...args) => $options.uploadFiles && $options.uploadFiles(...args))\n              }, null, 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.previewImageList, (image, index) => {\n                return _openBlock(), _createBlock(_component_image_preview, {\n                  imageId: image.imageId,\n                  imageSrc: image.imageSrc,\n                  removeImage: $props.removeImage,\n                  key: index,\n                  onRemove: $event => $options.removePreviewImage(image.imageId)\n                }, null, 8 /* PROPS */, [\"imageId\", \"imageSrc\", \"removeImage\", \"onRemove\"]);\n              }), 128 /* KEYED_FRAGMENT */))])], 2 /* CLASS */)]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_textarea, {\n            label: \"Label\",\n            variant: \"solo\",\n            class: \"text\"\n          }), _createVNode(_component_v_btn, {\n            onClick: _ctx.handleReset,\n            class: \"enregistrer\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" Enregistrer \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";gCAIMA,oBAA4C;EAAxCC,KAAK,EAAC;AAAO,GAAC,uBAAqB;gCA2BzBD,oBAAsB,WAAnB,iBAAe;gCAClBA,oBAAS,WAAN,IAAE;oBADLE,UAAsB,EACtBC,UAAS;gCAEXH,oBAAoE;EAA7DI,GAAG,EAAC,aAAa;EAACH,KAAK,EAAC;GAAqB,UAAQ;;EAEvDA,KAAK,EAAC;AAAiB;;;;;;;;;;;;;uBAnC5CI,aA0DQC;IA1DDC,IAAI,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACC,EAAE,EAAC,GAAG;IAACR,KAAK,EAAC;;sBACtC,MAwDS,CAxDTS,aAwDSC;MAxDDV,KAAK,EAAC;IAAS;wBACrB,MAEc,CAFdS,aAEcE;0BADZ,MAA4C,CAA5CC,UAA4C;;UAE1CH,aAkDUI;QAlDDb,KAAK,EAAC;MAAU;0BACvB,MAgDS,CAhDTS,aAgDSK;UAhDAC,QAAM,2CAAP,QAAe;;4BACrB,MAKe,CALfN,aAKeE;8BAJb,MAGc,CAHdF,aAGcO;cAHDhB,KAAK,EAAC;YAAO;gCACxB,MAA2C,CAA3CS,aAA2CQ;gBAA/BC,KAAK,EAAC;cAAW,IAC7BT,aAA6CQ;gBAAjCC,KAAK,EAAC;cAAa;;;;;cAGnCT,aAoCYO;YApCChB,KAAK,EAAC;UAAM;8BACvB,MAiCQ,CAjCRS,aAiCQJ;cAhCJC,IAAI,EAAC,IAAI;cACTE,EAAE,EAAC;;gCAEL,MAMgB,CANhBC,aAMgBU;4BALHC,cAAS;2EAATA,cAAS;gBACjBC,KAAK,EAAED,cAAS;gBAChBE,OAAO,EAAE,EAAE;gBACZJ,KAAK,EAAC,cAAc;gBACpBK,QAAQ,EAAR;gEAGJxB,oBAoBM;gBApBDC,KAAK,mBAAC,WAAW;kBAAAwB,WAAuBC;gBAAW;gBAAKC,GAAG,EAAC;kBAE/D3B,oBAAkE;gBAA/DC,KAAK,mBAAC,cAAc;kBAAA2B,MAAkBF;gBAAgB;uCACzD1B,oBAGM;gBAHDC,KAAK,mBAAC,gBAAgB;kBAAA2B,MAAkBF;gBAAgB;6CAI7DG,UAAoE,EACpE7B,oBAAqE;gBAA9D8B,EAAE,EAAC,aAAa;gBAACC,IAAI,EAAC,MAAM;gBAACC,QAAQ,EAAR,EAAQ;gBAAEC,QAAM,yCAAEC,qDAAW;iDACjElC,oBAUM,OAVNmC,UAUM,sBATJC,oBAQgBC,6BAPaX,sBAAgB,GAAjCY,KAAK,EAAEC,KAAK;qCADxBlC,aAQgBmC;kBANXC,OAAO,EAAEH,KAAK,CAACG,OAAO;kBACtBC,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;kBACxBC,WAAW,EAAEC,kBAAW;kBACxBC,GAAG,EAAEN,KAAK;kBACVO,QAAM,YAAEZ,2BAAkB,CAACI,KAAK,CAACG,OAAO;;;;;;;;cAQrD/B,aAAmEqC;YAAvD5B,KAAK,EAAC,OAAO;YAAC6B,OAAO,EAAC,MAAM;YAAC/C,KAAK,EAAC;cAC/CS,aAEQuC;YAFAC,OAAK,EAAE7B,gBAAW;YAAEpB,KAAK,EAAC;;8BAAc,MAEhD,kBAFgD,eAEhD","names":["_createElementVNode","class","_hoisted_2","_hoisted_3","for","_createBlock","_component_v_col","cols","sm","md","_createVNode","_component_v_card","_component_v_card_text","_hoisted_1","_component_v_sheet","_component_v_form","onSubmit","_component_v_container","_component_v_checkbox","label","_component_v_text_field","_ctx","rules","counter","required","highlight","$data","ref","hide","_hoisted_5","id","type","multiple","onChange","$options","_hoisted_6","_createElementBlock","_Fragment","image","index","_component_image_preview","imageId","imageSrc","removeImage","$props","key","onRemove","_component_v_textarea","variant","_component_v_btn","onClick"],"sourceRoot":"","sources":["C:\\Users\\toumy\\OneDrive\\Bureau\\projet_mspr\\projet_vue\\a-rosa-je_mspr_epsi\\arosaje-app\\src\\views\\DemandeGardinnage.vue"],"sourcesContent":["<template>\r\n  <v-col cols=\"10\" sm=\"10\" md=\"7\" class=\"demande\">\r\n  <v-card class=\"mx-auto\" >\r\n    <v-card-text>\r\n      <h2 class=\"titre\">Demande de gardinnage</h2>\r\n    </v-card-text>\r\n        <v-sheet class=\"cardform\">\r\n          <v-form @submit.prevent>\r\n            <v-card-text>\r\n              <v-container class=\"check\">\r\n                <v-checkbox label=\"Botaniste\"></v-checkbox>\r\n                <v-checkbox label=\"Utilisateur\"></v-checkbox>\r\n              </v-container>\r\n            </v-card-text >\r\n            <v-container class=\"form\">\r\n              <v-col\r\n                  cols=\"12\"\r\n                  md=\"4\"\r\n              >\r\n                <v-text-field\r\n                    v-model=\"firstname\"\r\n                    :rules=\"nameRules\"\r\n                    :counter=\"10\"\r\n                    label=\"Localisation\"\r\n                    required\r\n                ></v-text-field>\r\n\r\n                <div class=\"drop-area\" :class=\"[{ highlight: draggedOver }]\" ref=\"dropArea\">\r\n\r\n                  <i class=\"fa fa-camera\" :class=\"[{ hide: numPreviewImages }]\"></i>\r\n                  <div class=\"drop-area-text\" :class=\"[{ hide: numPreviewImages }]\">\r\n                    <p>Drop image here</p>\r\n                    <p>Or</p>\r\n                  </div>\r\n                  <label for=\"file-upload\" class=\"file-upload-button\"> Upload </label>\r\n                  <input id=\"file-upload\" type=\"file\" multiple @change=\"uploadFiles\" />\r\n                  <div class=\"drop-area-image\">\r\n                    <image-preview\r\n                        v-for=\"(image, index) in previewImageList\"\r\n                        :imageId=\"image.imageId\"\r\n                        :imageSrc=\"image.imageSrc\"\r\n                        :removeImage=\"removeImage\"\r\n                        :key=\"index\"\r\n                        @remove=\"removePreviewImage(image.imageId)\"\r\n                    >\r\n                    </image-preview>\r\n                  </div>\r\n                </div>\r\n              </v-col>\r\n\r\n          </v-container>\r\n            <v-textarea label=\"Label\" variant=\"solo\" class=\"text\"></v-textarea>\r\n            <v-btn @click=\"handleReset\" class=\"enregistrer\">\r\n              Enregistrer\r\n            </v-btn>\r\n          </v-form>\r\n        </v-sheet>\r\n\r\n  </v-card>\r\n  </v-col>\r\n</template>\r\n\r\n<script>\r\nimport ImagePreview  from '@/components/ImagePreview.vue'\r\n\r\n\r\nconst MAX_NUM_IMAGES = 9;\r\n\r\n\r\nexport default {\r\n  name:\"DemandeGardinnage\",\r\n  components: {ImagePreview,\r\n  },\r\n  props: {\r\n    processImage: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n    removeImage: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      draggedOver: false,\r\n      numPreviewImages: 0,\r\n      numProcessingImage: 0,\r\n      previewImageList: [],\r\n      imageUrlMap: {},\r\n    };\r\n  },\r\n  methods: {\r\n    customPreventDefault(event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    },\r\n    previewImage(image, imageId) {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(image);\r\n      fileReader.onloadend = () => {\r\n        this.previewImageList.push({\r\n          imageSrc: fileReader.result,\r\n          imageId: imageId,\r\n        });\r\n        this.numPreviewImages += 1;\r\n        this.numProcessingImage -= 1;\r\n        if (this.numProcessingImage === 0) {\r\n          // Finish processing and displaying all images\r\n          this.emitUrlList();\r\n        }\r\n      };\r\n    },\r\n    async handleImage(image) {\r\n      const { imageId, imageUrl } = await this.processImage(image).catch(\r\n          (err) => {\r\n            console.log(\"Error processing image: \", err);\r\n            return {\r\n              imageId: undefined,\r\n              imageUrl: undefined,\r\n            };\r\n          }\r\n      );\r\n      if (!imageId || !imageUrl) {\r\n        return;\r\n      }\r\n      this.imageUrlMap[imageId] = imageUrl;\r\n      this.previewImage(image, imageId);\r\n    },\r\n    processImagesFromFiles(files) {\r\n      const uploadedImages = [...files].filter((file) => {\r\n        return file.type.startsWith(\"image\");\r\n      });\r\n      this.numProcessingImage = Math.min(\r\n          uploadedImages.length,\r\n          MAX_NUM_IMAGES - this.numPreviewImages\r\n      );\r\n      const processedImages = uploadedImages.slice(0, this.numProcessingImage);\r\n      processedImages.forEach(this.handleImage);\r\n    },\r\n    uploadFiles(event) {\r\n      if (this.numPreviewImages >= MAX_NUM_IMAGES) {\r\n        return;\r\n      }\r\n      const uploadedFiles = event.target.files;\r\n      if (!uploadedFiles) {\r\n        return;\r\n      }\r\n      this.processImagesFromFiles(uploadedFiles);\r\n    },\r\n    dropFiles(event) {\r\n      if (this.numPreviewImages >= MAX_NUM_IMAGES) {\r\n        return;\r\n      }\r\n      if (!event.dataTransfer) {\r\n        return;\r\n      }\r\n      if (!event.dataTransfer.files.length) {\r\n        return;\r\n      }\r\n      this.draggedOver = false;\r\n      this.processImagesFromFiles(event.dataTransfer.files);\r\n    },\r\n    removePreviewImage(imageId) {\r\n      delete this.imageUrlMap[imageId];\r\n      this.emitUrlList();\r\n      this.numPreviewImages -= 1;\r\n    },\r\n    emitUrlList() {\r\n      const updatedUrlList = Object.keys(this.imageUrlMap).map(\r\n          (key) => this.imageUrlMap[key]\r\n      );\r\n      this.$emit(\"update-urls\", updatedUrlList);\r\n    },\r\n  },\r\n  created() {\r\n    [\"dragover\", \"drop\"].forEach((eventName) => {\r\n      document.addEventListener(eventName, this.customPreventDefault);\r\n    });\r\n  },\r\n  mounted() {\r\n    // Prevent browser from opening dragged images in a new tab\r\n    // and the drop event can be handled by our callback\r\n    [\"dragover\", \"drop\"].forEach((eventName) => {\r\n      this.$refs.dropArea.addEventListener(\r\n          eventName,\r\n          this.customPreventDefault\r\n      );\r\n    });\r\n\r\n    this.$refs.dropArea.addEventListener(\"drop\", this.dropFiles);\r\n    // Show / hide highlight animation on drop area when files are dragged in / out\r\n    this.$refs.dropArea.addEventListener(\"dragenter\", () => {\r\n      this.draggedOver = true;\r\n    });\r\n    this.$refs.dropArea.addEventListener(\"dragleave\", (event) => {\r\n      const dropAreaPosition = this.$refs.dropArea.getBoundingClientRect();\r\n      // Only disable highlight animation when dragleave events occurs outside of drop area.\r\n      // By default, dragleave event occurs when dragging into child elements (still inside drop area).\r\n      const surplusGap = 10; //px\r\n      if (\r\n          event.clientX >= dropAreaPosition.left + surplusGap &&\r\n          event.clientX <= dropAreaPosition.right - surplusGap &&\r\n          event.clientY >= dropAreaPosition.top + surplusGap &&\r\n          event.clientY <= dropAreaPosition.bottom - surplusGap\r\n      ) {\r\n        return;\r\n      }\r\n      this.draggedOver = false;\r\n    });\r\n  },\r\n  beforeUnmount() {\r\n    [\"dragover\", \"drop\"].forEach((eventName) => {\r\n      document.removeEventListener(eventName, this.customPreventDefault);\r\n    });\r\n  },\r\n\r\n\r\n};\r\n</script>\r\n<style>\r\n#my-strictly-unique-vue-upload-multiple-image {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n\r\nh1, h2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n.demande{\r\n  background-color: forestgreen;\r\n  margin: auto;\r\n  color:black;\r\n}\r\n.titre{\r\n  color:black;\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.mx-auto{\r\n  color:white;\r\n\r\n}\r\n.cardform{\r\n\r\n  min-height: 450px;\r\n}\r\n\r\n.check{\r\n  display:flex;\r\n  justify-content: space-evenly;\r\n\r\n}\r\n.text{\r\n  width:500px;\r\n  margin-left: 20px;\r\n}\r\n\r\n.form{\r\n\r\n  margin-top: -60px;\r\n  display:flex;\r\n}\r\n.enregistrer{\r\n  color:white;\r\n  background-color: forestgreen ;\r\n  width:300px;\r\n margin-left:30px;\r\n}\r\n\r\n\r\n.photos v-card {\r\n  width: 400px;\r\n  height: 500px;\r\n  margin: 16px;\r\n}\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}